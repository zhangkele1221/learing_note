


git使用过程中的问题:

1.本地修改 未add和commit 但是要同步远程代码到本地 标准操作如下:
git stash 
git pull 
git stash pop //这一步看有没有冲突 有冲突解决冲突  也可以通过git stash show 查看 stash 的内容

如果上面没有git stash 直接 pull 会出现冲突 pull 拉不下来 或者覆盖本地修改 或无冲突和覆盖直接同步 
应该用git stash   git pull git stash pop 这样的操作上面的标准做法操作 

2.当前分支开放过程中 当前分支需要切换到别的分支开发 
git add git commit  git push 这一些列操作  这是可以的 但是有需要就是不想 git add 当前的修改
但是不add  直接使用 git checkout 不到别的分支 怎么操作呢？

当然是 git stash 然后切换到别的分支  操作完成别的分支再次切回来 git stash pop  这样之前没有提交的就恢复到之前没有提交的状态咯！

3. 只想将别的分支的某一次提交 提交到某一个分支 
请使用 git cherry-pick  commid 



git 的奇淫技巧

1.抛弃本地所有修改 一次操作 
git fetch  --all
我一般都是 git  checkout -- xxxxfile xxxxfile1 这样操作 因为有的文件修改还想保留下来  git fetch --all 有点暴力 抛弃本地所有修改

2.重新设置第一个commit 
就是将所有的改动都重新放回到  工作区(workspace) 清空本地的所有的commit  这一就可以重新提交第一个commit 了
git update-ref -d HEAD

3.展示工作区域和暂存区的不同
输出工作区和暂存区的different 
git  diff 
git  diff  commit-id  commit-id

4.展示暂存区和最近版本的不同

5.展示暂存区 工作区和最近版本的不同

6.快速切换到上一个分支
git checkout -


7.删除已经合并到master 的分支


8. 展示本地分支关联远程仓库的情况  这个命令个人经常用
git branch -vv


9.关联远程分支

10.列出所有远程分支 和列出所有本地和远程分支
git branch -r  
git branch -a 

11.创建并且切换的本地分支  大家都常用咯
git checkout  -b  xxx_local_brach


12. 从远程分支中创建并切换到本地分支  就是将远程某个分支拉到本地并创建对应的分支与之对应   个人经常用咯
git checkout -b   xxx_local_brach  origin/xxx_remote_branch


13. 删除本地分支  常用
git branch -d  xxx_local_brach

14 删除远程分支 常用
git  push origin  --delete  xxx_remote_branch
git push origin :xxx_remote_branch   两个功能一样


15 重新命名本地分支
git branch  -m  new-local_xxx_branch 

16 查看标签
git tag


17.放弃工作区的修改
git checkout  --  xxxxfile
放弃工作区的所有修改
git checkout .

18 恢复删除的文件

19. 用一个新增commit 的方式 还原某一个 commit 的修改 这个 应该要多用用
git revert  commit-id    
就是revert 某个commit-id  就是去掉某一次的提交 
这里要注意编译逻辑等问题  以防这次的revert id 影响到后续其他已经push 的代码

20 回到某个commit的状态 并且删除后面的commit  注意和19条 revert 的区别  要理解这两者的不同
reset 命令会抹去某个commit id 之后的所有commit 
git reset commit-id 
git reset --hard commid-id

21 修改上一个commit 的描述
git commit  --amend

22 查看代码是谁写的
git blame  xxx.file

23 显示本地所有的 commit amend cherry-pick reset revert 等
git reflog

24 修改作者名字


25 





















